prometheus:
  service:
    type: LoadBalancer
    loadBalancerIP: "{{ .StateValues.ip.kind1.prometheus }}"
  prometheusSpec:
    externalUrl: "http://{{ .StateValues.ip.kind1.prometheus }}:9090"
    externalLabels:
      cluster: kind1
    remoteWrite:
      - url: http://{{ .StateValues.ip.kind1.victoriaMetrics }}:8428/api/v1/write
    # NOTE: Default configuration will connect to the alertmanager deployed as part of this release
    # alertingEndpoints: []



    # avoid to add release label for monitor selector
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false

    # manage all monitor CRDs
    ruleNamespaceSelector: {}
    serviceMonitorSelector: {}
    probeSelector: {}
    scrapeConfigSelector: {}

# defaultRules:
#     kubeProxy: false
#     kubeSchedulerAlerting: false
#     kubeSchedulerRecording: false
#     kubeControllerManager: false


# TODO: これらの pod は container port を公開してない。
kubeScheduler:
  enabled: false
kubeProxy:
  enabled: false
kubeControllerManager:
  enabled: false
kubeEtcd:
  # MEMO: node ip (172.18.0.2) でアクセスすれば繋ぐことはできる。NodePort サービスでもないのに。
  # 証明書があれば以下で取れそうな気はする
  #   curl -s https://172.18.0.2:2379/metrics --cacert /etc/kubernetes/pki/etcd/ca.crt --cert /etc/kubernetes/pki/etcd/server.crt --key /etc/kubernetes/pki/etcd/server.key
  enabled: false


grafana:
  enabled: false
  forceDeployDashboards: true
  defaultDashboardsTimezone: Asia/Tokyo

alertmanager:
  enabled: true
  service:
    type: LoadBalancer
    loadBalancerIP: "{{ .StateValues.ip.kind1.alertmanager }}"
